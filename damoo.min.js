/*! Damoo v1.2.0 | Copyright (c) 2015 James Liu | Released under the MIT license */
;(function(f){var b=function(a,d,c){if(!(this instanceof b))return new b(a,d,c);this.parent=b.dom.getElementById(a);this.canvas=b.dom.createElement("canvas");this.canvas.id=d;this.canvas.width=this.parent.offsetWidth;this.canvas.height=this.parent.offsetHeight;this.canvas.style.display="block";this.canvas.style.backgroundColor="transparent";this.canvas.style.position="relative";this.canvas.style.left=0;this.canvas.style.top=0;this.canvas.style.zIndex=99999;this.ctx=this.canvas.getContext("2d");this.rows=
c;this.font=new g(this.canvas.height/this.rows,"Arial");this.thread=new e};b.dom=f.document;b.prototype.show=function(){this.parent.appendChild(this.canvas)};b.prototype.hide=function(){this.parent.removeChild(this.canvas)};b.prototype.emit=function(a){var d=b.dom.createElement("canvas"),c=d.getContext("2d");d.width=this.font.size*a.text.length;d.height=1.2*this.font.size;c.font=this.font.toString();c.fillStyle="#fff";c.fillStyle=a.color;c.textAlign="start";c.textBaseline="top";c.fillText(a.text,
0,0);this.thread.push({canvas:d,speed:Math.sqrt(a.text.length)/1.5,offset:{x:this.canvas.width,y:null}})};b.prototype.clear=function(){this.thread.empty()};b.prototype.start=function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(var a=0;a<this.thread.length;a++){var b=this.thread.get(a).offset.x,c;c=null==this.thread.get(a).offset.y?this.thread.get(a).offset.y=this.font.size*Math.floor(Math.random()*this.rows):this.thread.get(a).offset.y;this.ctx.drawImage(this.thread.get(a).canvas,
b,c);this.thread.get(a).offset.x-=this.thread.get(a).speed;b<=-this.thread.get(a).canvas.width&&this.thread.remove(a)}setTimeout(function(a){return function(){a.start()}}(this),1)};var g=function(a,b){this.size=a;this.family=b};g.prototype.toString=function(){return this.size+"px "+this.family};var e=function(){this.memory=[]};e.prototype.push=function(a){this.memory.push(a)};e.prototype.get=function(a){return this.memory[a]};e.prototype.remove=function(a){this.memory.splice(a,1)};e.prototype.empty=
function(){this.memory=[]};Object.defineProperty(e.prototype,"length",{get:function(){return this.memory.length}});f.Damoo=b})(window);